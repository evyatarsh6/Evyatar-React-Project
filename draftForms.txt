
        {/* <input {...register("firstName", { required: true, maxLength: 20 })} />
        <input {...register("lastName", { pattern: /^[A-Za-z]+$/i })} />
        <input type="number" {...register("age", { min: 18, max: 99 })} />
        <input type="submit" />
        <button onClick={handleClose}> </button>
        <DialogTitle>create new Avi Berger</DialogTitle>
        <DialogContent>
          <DialogContentText>
            To create new Avi Berger TODO to this website, please enter the wanted info here.
          </DialogContentText>
          <TextField
          {...register("firstName", { required: true, maxLength: 20 })} 
            autoFocus
            required
            margin="dense"
            id="description-field"
            name="description"
            label="description"
            type="text"
            fullWidth
            variant="standard"
            />
        </DialogContent>
        <DialogActions>
          <Button onClick={handleClose}>Cancel</Button>
          <Button type="submit">Subscribe</Button>
        </DialogActions> */}









































   {/* <Dialog
        open={open}
        onClose={handleClose}
        PaperProps={{
          component: 'form',
          onSubmit: (event) => {
            event.preventDefault();
            const formData = new FormData(event.currentTarget);
            const formJson = Object.fromEntries(formData.entries());
            const TODODescription = formJson.TODODescription;
            console.log(TODODescription);
            handleClose();
          },
        }}
      >
        <DialogTitle>new TODO</DialogTitle>
        <DialogContent>
          <DialogContentText>
            To add new Avi Berger to this list, please enter the wanted init info about the task here.
          </DialogContentText>
          <TextField
            autoFocus
            required
            margin="dense"
            id="TODODescription"
            name="TODODescription"
            label="TODO description"
            type="text"
            fullWidth
            variant="standard"
          />
          <Checkbox
            autoFocus
            required
            margin="dense"
            id="name"
            name="email"
            label="TODO description"
            type="text"
            fullWidth
            variant="standard"
            />


        </DialogContent>
        <DialogActions>
          <Button onClick={handleClose}>Cancel</Button>
          <Button type="submit">Subscribe</Button>
        </DialogActions>
      </Dialog> */}









            // import React, {useEffect, useMemo, useState } from 'react';
            // import { useDispatch, useSelector } from 'react-redux';
            // import {  useForm } from "react-hook-form"
            // import {Autocomplete} from '@mui/material';
            // import { GetFormDetails } from '../selectors';
            // import { closeForm } from '../actions/actions';
            
            
            // export const TODOForm = ({style}) => {
            //     const { handleSubmit,register, reset } = useForm();
            //       const TODOKind = useSelector(GetFormDetails)
            
            //       const dispatch = useDispatch()
            
            //       const onSubmit = (data) => console.log(data)
            
            //       const handleCloseForm = event => {
            //         event.preventDefault()
            //         dispatch(closeForm())
            //       }
                  
            //       return (
            //         <form style = {style} onSubmit={handleSubmit(onSubmit)}>
            //             <input {...register("firstName", { required: true, maxLength: 20 })} />
            //             <input {...register("lastName", { pattern: /^[A-Za-z]+$/i })} />
            //             <input type="number" {...register("age", { min: 18, max: 99 })} />
            //             <input type="submit" />
            //             <button onClick={handleCloseForm}> </button>
            //             Avi
            //         </form>
            //       )
            //     }









    //     PaperProps={{
    //       component: 'form',
    //       onSubmit: (event) => {
    //         event.preventDefault();
    //         const formData = new FormData(event.currentTarget);
    //         const formJson = Object.fromEntries(formData.entries());
    //         const email = formJson.email;
    //         console.log(email);
    //         handleClose();
    //     },
    // }}
